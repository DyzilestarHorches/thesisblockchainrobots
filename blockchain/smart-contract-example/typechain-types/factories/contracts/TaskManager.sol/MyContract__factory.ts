/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MyContract,
  MyContractInterface,
} from "../../../contracts/TaskManager.sol/MyContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "good",
        type: "string",
      },
      {
        internalType: "string",
        name: "destination",
        type: "string",
      },
      {
        internalType: "string",
        name: "assigner",
        type: "string",
      },
    ],
    name: "addTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "readTask",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "good",
            type: "string",
          },
          {
            internalType: "string",
            name: "destination",
            type: "string",
          },
          {
            internalType: "string",
            name: "assigner",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "stage",
            type: "uint256",
          },
        ],
        internalType: "struct MyContract.Task[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610882806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063517c07341461003b5780639b36037b14610057575b600080fd5b61005560048036038101906100509190610517565b610075565b005b61005f6101ff565b60405161006c919061070d565b60405180910390f35b6000604051806080016040528088888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200160008152509050600081908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000190805190602001906101af92919061041e565b5060208201518160010190805190602001906101cc92919061041e565b5060408201518160020190805190602001906101e992919061041e565b5060608201518160030155505050505050505050565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156104155783829060005260206000209060040201604051806080016040529081600082018054610256906107c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610282906107c1565b80156102cf5780601f106102a4576101008083540402835291602001916102cf565b820191906000526020600020905b8154815290600101906020018083116102b257829003601f168201915b505050505081526020016001820180546102e8906107c1565b80601f0160208091040260200160405190810160405280929190818152602001828054610314906107c1565b80156103615780601f1061033657610100808354040283529160200191610361565b820191906000526020600020905b81548152906001019060200180831161034457829003601f168201915b5050505050815260200160028201805461037a906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546103a6906107c1565b80156103f35780601f106103c8576101008083540402835291602001916103f3565b820191906000526020600020905b8154815290600101906020018083116103d657829003601f168201915b5050505050815260200160038201548152505081526020019060010190610223565b50505050905090565b82805461042a906107c1565b90600052602060002090601f01602090048101928261044c5760008555610493565b82601f1061046557805160ff1916838001178555610493565b82800160010185558215610493579182015b82811115610492578251825591602001919060010190610477565b5b5090506104a091906104a4565b5090565b5b808211156104bd5760008160009055506001016104a5565b5090565b60008083601f8401126104d7576104d6610827565b5b8235905067ffffffffffffffff8111156104f4576104f3610822565b5b6020830191508360018202830111156105105761050f61082c565b5b9250929050565b6000806000806000806060878903121561053457610533610836565b5b600087013567ffffffffffffffff81111561055257610551610831565b5b61055e89828a016104c1565b9650965050602087013567ffffffffffffffff81111561058157610580610831565b5b61058d89828a016104c1565b9450945050604087013567ffffffffffffffff8111156105b0576105af610831565b5b6105bc89828a016104c1565b92509250509295509295509295565b60006105d7838361068d565b905092915050565b60006105ea8261073f565b6105f48185610762565b9350836020820285016106068561072f565b8060005b85811015610642578484038952815161062385826105cb565b945061062e83610755565b925060208a0199505060018101905061060a565b50829750879550505050505092915050565b600061065f8261074a565b6106698185610773565b935061067981856020860161078e565b6106828161083b565b840191505092915050565b600060808301600083015184820360008601526106aa8282610654565b915050602083015184820360208601526106c48282610654565b915050604083015184820360408601526106de8282610654565b91505060608301516106f360608601826106fe565b508091505092915050565b61070781610784565b82525050565b6000602082019050818103600083015261072781846105df565b905092915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000819050919050565b60005b838110156107ac578082015181840152602081019050610791565b838111156107bb576000848401525b50505050565b600060028204905060018216806107d957607f821691505b602082108114156107ed576107ec6107f3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f830116905091905056fea2646970667358221220823c1cbbac61fecbb06c7814e6d1578c0394de83cb0b7fdd40cba1378e8c761b64736f6c63430008060033";

type MyContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyContract__factory extends ContractFactory {
  constructor(...args: MyContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyContract__factory {
    return super.connect(runner) as MyContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyContractInterface {
    return new Interface(_abi) as MyContractInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyContract {
    return new Contract(address, _abi, runner) as unknown as MyContract;
  }
}
