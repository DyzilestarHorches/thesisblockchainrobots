/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TaskAssigner,
  TaskAssignerInterface,
} from "../../../contracts/TaskManager.sol/TaskAssigner";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "freeBotsID",
        type: "uint256[]",
      },
    ],
    name: "DoneFindingFreeBots",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "unassignedTasksID",
        type: "uint256[]",
      },
    ],
    name: "DoneFindingNewTasks",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "good",
        type: "string",
      },
      {
        internalType: "string",
        name: "destination",
        type: "string",
      },
    ],
    name: "addTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwnTask",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "good",
            type: "string",
          },
          {
            internalType: "string",
            name: "destination",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "assigner",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stage",
            type: "uint256",
          },
        ],
        internalType: "struct TaskAssigner.Task",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "readTasks",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "good",
            type: "string",
          },
          {
            internalType: "string",
            name: "destination",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "assigner",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stage",
            type: "uint256",
          },
        ],
        internalType: "struct TaskAssigner.Task[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "robots",
    outputs: [
      {
        internalType: "address",
        name: "node_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "status",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roundRobin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tasks",
    outputs: [
      {
        internalType: "string",
        name: "good",
        type: "string",
      },
      {
        internalType: "string",
        name: "destination",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "assigner",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stage",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "taskID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stage",
        type: "uint256",
      },
    ],
    name: "updateTaskStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060025534801561001557600080fd5b5060016040518060400160405280738943545177806ed17b9f23f0a21ee5948ecaa77673ffffffffffffffffffffffffffffffffffffffff1681526020016000815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550506001604051806040016040528073614561d2d143621e126e87831aef287678b442b873ffffffffffffffffffffffffffffffffffffffff1681526020016000815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550506001604051806040016040528073f93ee4cf8c6c40b329b0c0626f28333c132cf24173ffffffffffffffffffffffffffffffffffffffff1681526020016000815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101555050611a1d8061025f6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063b37b10001161005b578063b37b100014610104578063edd8e1f614610120578063fb0489931461013c578063fe55c0391461015a5761007d565b80638d97767214610082578063a03937c5146100b5578063b03ef677146100e6575b600080fd5b61009c6004803603810190610097919061121b565b610178565b6040516100ac94939291906115d0565b60405180910390f35b6100cf60048036038101906100ca919061121b565b6102c8565b6040516100dd929190611563565b60405180910390f35b6100ee61031c565b6040516100fb91906116a5565b60405180910390f35b61011e6004803603810190610119919061119a565b610322565b005b61013a60048036038101906101359190611248565b61045c565b005b61014461065c565b604051610151919061158c565b60405180910390f35b6101626107f3565b60405161016f9190611683565b60405180910390f35b6000818154811061018857600080fd5b90600052602060002090600402016000915090508060000180546101ab906117ce565b80601f01602080910402602001604051908101604052809291908181526020018280546101d7906117ce565b80156102245780601f106101f957610100808354040283529160200191610224565b820191906000526020600020905b81548152906001019060200180831161020757829003601f168201915b505050505090806001018054610239906117ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610265906117ce565b80156102b25780601f10610287576101008083540402835291602001916102b2565b820191906000526020600020905b81548152906001019060200180831161029557829003601f168201915b5050505050908060020154908060030154905084565b600181815481106102d857600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60025481565b6000604051806080016040528086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001600081526020016000815250905060008190806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019080519060200190610419929190611064565b506020820151816001019080519060200190610436929190611064565b5060408201518160020155606082015181600301555050610455610bba565b5050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905060005b600180549050811015610525573373ffffffffffffffffffffffffffffffffffffffff16600182815481106104bc576104bb6118a7565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561051257809150610525565b808061051d90611800565b915050610484565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057f90611623565b60405180910390fd5b816000858154811061059d5761059c6118a7565b5b906000526020600020906004020160020154146105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e690611663565b60405180910390fd5b8260008581548110610604576106036118a7565b5b906000526020600020906004020160030181905550600583141561064e57600060018381548110610638576106376118a7565b5b9060005260206000209060020201600101819055505b610656610bba565b50505050565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156107ea57838290600052602060002090600402016040518060800160405290816000820180546106b3906117ce565b80601f01602080910402602001604051908101604052809291908181526020018280546106df906117ce565b801561072c5780601f106107015761010080835404028352916020019161072c565b820191906000526020600020905b81548152906001019060200180831161070f57829003601f168201915b50505050508152602001600182018054610745906117ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610771906117ce565b80156107be5780601f10610793576101008083540402835291602001916107be565b820191906000526020600020905b8154815290600101906020018083116107a157829003601f168201915b505050505081526020016002820154815260200160038201548152505081526020019060010190610680565b50505050905090565b6107fb6110ea565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905060005b6001805490508110156108c4573373ffffffffffffffffffffffffffffffffffffffff166001828154811061085b5761085a6118a7565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108b1578091506108c4565b80806108bc90611800565b915050610823565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610927576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091e90611623565b60405180910390fd5b60005b600080549050811015610ad857826000828154811061094c5761094b6118a7565b5b9060005260206000209060040201600201541415610ad35760008181548110610978576109776118a7565b5b90600052602060002090600402016040518060800160405290816000820180546109a1906117ce565b80601f01602080910402602001604051908101604052809291908181526020018280546109cd906117ce565b8015610a1a5780601f106109ef57610100808354040283529160200191610a1a565b820191906000526020600020905b8154815290600101906020018083116109fd57829003601f168201915b50505050508152602001600182018054610a33906117ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5f906117ce565b8015610aac5780601f10610a8157610100808354040283529160200191610aac565b820191906000526020600020905b815481529060010190602001808311610a8f57829003601f168201915b50505050508152602001600282015481526020016003820154815250509350505050610bb7565b61092a565b610ae0610bba565b6002600114610b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1b90611643565b60405180910390fd5b60405180608001604052806040518060400160405280600181526020017f6e0000000000000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600181526020017f6e00000000000000000000000000000000000000000000000000000000000000815250815260200160008152602001600081525093505050505b90565b600060018054905067ffffffffffffffff811115610bdb57610bda6118d6565b5b604051908082528060200260200182016040528015610c095781602001602082028036833780820191505090505b50905060008060025490505b600115610cac578080610c2790611800565b9150506001805490508110610c3b57600090505b600060018281548110610c5157610c506118a7565b5b9060005260206000209060020201600101541415610c985780838381518110610c7d57610c7c6118a7565b5b6020026020010181815250508180610c9490611800565b9250505b600254811415610ca757610cac565b610c15565b60008267ffffffffffffffff811115610cc857610cc76118d6565b5b604051908082528060200260200182016040528015610cf65781602001602082028036833780820191505090505b50905060005b83811015610d5157848181518110610d1757610d166118a7565b5b6020026020010151828281518110610d3257610d316118a7565b5b6020026020010181815250508080610d4990611800565b915050610cfc565b507f7d5f44acb72e60ad4b0d6e867323c02709304e6557b12a0aaf278e52ddbab2c881604051610d8191906115ae565b60405180910390a16000808054905067ffffffffffffffff811115610da957610da86118d6565b5b604051908082528060200260200182016040528015610dd75781602001602082028036833780820191505090505b5090506000805b600080549050811015610e5a576000808281548110610e0057610dff6118a7565b5b9060005260206000209060040201600301541415610e475780838381518110610e2c57610e2b6118a7565b5b6020026020010181815250508180610e4390611800565b9250505b8080610e5290611800565b915050610dde565b60008267ffffffffffffffff811115610e7657610e756118d6565b5b604051908082528060200260200182016040528015610ea45781602001602082028036833780820191505090505b50905060005b83811015610eff57848181518110610ec557610ec46118a7565b5b6020026020010151828281518110610ee057610edf6118a7565b5b6020026020010181815250508080610ef790611800565b915050610eaa565b507f5293692d576371b1632e8c047b6814d63e95b5afad808a797d36297b661773ea81604051610f2f91906115ae565b60405180910390a16000805b825182108015610f4b5750865181105b156110585760016000848481518110610f6757610f666118a7565b5b602002602001015181548110610f8057610f7f6118a7565b5b906000526020600020906004020160030181905550868181518110610fa857610fa76118a7565b5b60200260200101516000848481518110610fc557610fc46118a7565b5b602002602001015181548110610fde57610fdd6118a7565b5b906000526020600020906004020160020181905550600180888381518110611009576110086118a7565b5b602002602001015181548110611022576110216118a7565b5b906000526020600020906002020160010181905550808061104290611800565b915050818061105090611800565b925050610f3b565b50505050505050505050565b828054611070906117ce565b90600052602060002090601f01602090048101928261109257600085556110d9565b82601f106110ab57805160ff19168380011785556110d9565b828001600101855582156110d9579182015b828111156110d85782518255916020019190600101906110bd565b5b5090506110e69190611112565b5090565b6040518060800160405280606081526020016060815260200160008152602001600081525090565b5b8082111561112b576000816000905550600101611113565b5090565b60008083601f8401126111455761114461190a565b5b8235905067ffffffffffffffff81111561116257611161611905565b5b60208301915083600182028301111561117e5761117d61190f565b5b9250929050565b600081359050611194816119d0565b92915050565b600080600080604085870312156111b4576111b3611919565b5b600085013567ffffffffffffffff8111156111d2576111d1611914565b5b6111de8782880161112f565b9450945050602085013567ffffffffffffffff81111561120157611200611914565b5b61120d8782880161112f565b925092505092959194509250565b60006020828403121561123157611230611919565b5b600061123f84828501611185565b91505092915050565b6000806040838503121561125f5761125e611919565b5b600061126d85828601611185565b925050602061127e85828601611185565b9150509250929050565b60006112948383611471565b905092915050565b60006112a88383611545565b60208301905092915050565b6112bd8161175f565b82525050565b60006112ce826116e0565b6112d8818561171b565b9350836020820285016112ea856116c0565b8060005b8581101561132657848403895281516113078582611288565b945061131283611701565b925060208a019950506001810190506112ee565b50829750879550505050505092915050565b6000611343826116eb565b61134d818561172c565b9350611358836116d0565b8060005b83811015611389578151611370888261129c565b975061137b8361170e565b92505060018101905061135c565b5085935050505092915050565b60006113a1826116f6565b6113ab818561173d565b93506113bb81856020860161179b565b6113c48161191e565b840191505092915050565b60006113da826116f6565b6113e4818561174e565b93506113f481856020860161179b565b6113fd8161191e565b840191505092915050565b6000611415600e8361174e565b91506114208261192f565b602082019050919050565b600061143860118361174e565b915061144382611958565b602082019050919050565b600061145b60228361174e565b915061146682611981565b604082019050919050565b6000608083016000830151848203600086015261148e8282611396565b915050602083015184820360208601526114a88282611396565b91505060408301516114bd6040860182611545565b5060608301516114d06060860182611545565b508091505092915050565b600060808301600083015184820360008601526114f88282611396565b915050602083015184820360208601526115128282611396565b91505060408301516115276040860182611545565b50606083015161153a6060860182611545565b508091505092915050565b61154e81611791565b82525050565b61155d81611791565b82525050565b600060408201905061157860008301856112b4565b6115856020830184611554565b9392505050565b600060208201905081810360008301526115a681846112c3565b905092915050565b600060208201905081810360008301526115c88184611338565b905092915050565b600060808201905081810360008301526115ea81876113cf565b905081810360208301526115fe81866113cf565b905061160d6040830185611554565b61161a6060830184611554565b95945050505050565b6000602082019050818103600083015261163c81611408565b9050919050565b6000602082019050818103600083015261165c8161142b565b9050919050565b6000602082019050818103600083015261167c8161144e565b9050919050565b6000602082019050818103600083015261169d81846114db565b905092915050565b60006020820190506116ba6000830184611554565b92915050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061176a82611771565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156117b957808201518184015260208101905061179e565b838111156117c8576000848401525b50505050565b600060028204905060018216806117e657607f821691505b602082108114156117fa576117f9611878565b5b50919050565b600061180b82611791565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561183e5761183d611849565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f207375636820726f626f7421000000000000000000000000000000000000600082015250565b7f74686520726f626f742069732066726565000000000000000000000000000000600082015250565b7f5468697320726f626f74206973206e6f7420646f696e6720746869732074617360008201527f6b21000000000000000000000000000000000000000000000000000000000000602082015250565b6119d981611791565b81146119e457600080fd5b5056fea26469706673582212206278d847201a5ed385220f49bae44234a5d031ff684cf580b3acf2f510b4f84464736f6c63430008060033";

type TaskAssignerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TaskAssignerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TaskAssigner__factory extends ContractFactory {
  constructor(...args: TaskAssignerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TaskAssigner & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TaskAssigner__factory {
    return super.connect(runner) as TaskAssigner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TaskAssignerInterface {
    return new Interface(_abi) as TaskAssignerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TaskAssigner {
    return new Contract(address, _abi, runner) as unknown as TaskAssigner;
  }
}
